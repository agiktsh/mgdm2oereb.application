services:

  # The service interface which offers transformation entry points based on pygeopi processing standards
  mgdm2oereb-service:
    user: ${CURRENT_UID}:${CURRENT_GID}
    build: 
      context: ./mgdm2oereb_service
      target: dev
      args:
        MGDM2OEREB_VERSION: c975a92b7c32bc46cca09e23593d211fc3033df9
    restart: unless-stopped
    environment:
      - PYGEOAPI_CONFIG
      - PYGEOAPI_OPENAPI 
      - GUNICORN_CONFIG
      - MGDM2OEREB_TRAFO_CONFIG
      - ILIVALIDATOR_SERVICE=http://ilivalidator-service:8080/rest/jobs
      - MGDM2OEREB_DATA
      - FLASK_ENV=${MGDM2OEREB_SERVICE_FLASK_ENV}
    volumes:
      - data:${MGDM2OEREB_DATA}
      - ./mgdm2oereb_service:/app
    ports:
      - "5000:5000"
  # The service interface which offers transformation entry points based on pygeopi processing standards
  mgdm2oereb-gui:
    user: ${CURRENT_UID}:${CURRENT_GID}
    build:
      context: ./mgdm2oereb_frontend
      target: dev
    restart: unless-stopped
    environment:
      URL_SCHEME: "http"
      LOG_LEVEL: "DEBUG"
    volumes:
      - ./mgdm2oereb_frontend:/app
      - data:${MGDM2OEREB_DATA}:ro
    ports:
      - "8080:8080"
  ilivalidator-service:
    image: sogis/ilivalidator-web-service:2
    environment:
      TZ: Europe/Zurich
    ports:
      - 7000:8080
      - 7001:8000
    restart: unless-stopped
  rss-trigger:
    environment:
      - RSS_STORAGE_PATH
      - RSS_URL
      - GIT_REPO_PATH
      - GIT_REPO_URL
      - MAIL
    build:
      context: ./rss_trigger
      dockerfile: Dockerfile
    command:
      - /app/loop.sh
    volumes:
      - rss-storeage:/rss-storeage
      - ./rss_trigger/:/app
      - ./.ssh:/root/.ssh
volumes:
  data:
  rss-storeage:
